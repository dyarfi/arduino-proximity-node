{
  "_args": [
    [
      {
        "raw": "git+https://github.com/ajfisher/nodebots-hcsr04",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "git+https://github.com/ajfisher/nodebots-hcsr04",
        "spec": "git+https://github.com/ajfisher/nodebots-hcsr04.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:ajfisher/nodebots-hcsr04.git",
          "sshUrl": "git+ssh://git@github.com/ajfisher/nodebots-hcsr04.git",
          "httpsUrl": "git+https://github.com/ajfisher/nodebots-hcsr04.git",
          "gitUrl": "git://github.com/ajfisher/nodebots-hcsr04.git",
          "shortcut": "github:ajfisher/nodebots-hcsr04",
          "directUrl": "https://raw.githubusercontent.com/ajfisher/nodebots-hcsr04/master/package.json"
        }
      },
      "/Volumes/Data/Arduino/Files/johny-five"
    ]
  ],
  "_from": "git+https://github.com/ajfisher/nodebots-hcsr04.git",
  "_id": "nodebots-hcsr04@0.5.0",
  "_inCache": true,
  "_location": "/nodebots-hcsr04",
  "_phantomChildren": {},
  "_requested": {
    "raw": "git+https://github.com/ajfisher/nodebots-hcsr04",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "git+https://github.com/ajfisher/nodebots-hcsr04",
    "spec": "git+https://github.com/ajfisher/nodebots-hcsr04.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:ajfisher/nodebots-hcsr04.git",
      "sshUrl": "git+ssh://git@github.com/ajfisher/nodebots-hcsr04.git",
      "httpsUrl": "git+https://github.com/ajfisher/nodebots-hcsr04.git",
      "gitUrl": "git://github.com/ajfisher/nodebots-hcsr04.git",
      "shortcut": "github:ajfisher/nodebots-hcsr04",
      "directUrl": "https://raw.githubusercontent.com/ajfisher/nodebots-hcsr04/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "git+https://github.com/ajfisher/nodebots-hcsr04.git#357492677f4563a512436685199cfa661f4cf859",
  "_shasum": "f885d00200b812e4c5dd1631e1bbae93a998c11a",
  "_shrinkwrap": null,
  "_spec": "git+https://github.com/ajfisher/nodebots-hcsr04",
  "_where": "/Volumes/Data/Arduino/Files/johny-five",
  "author": {
    "name": "Andrew Fisher",
    "email": "ajfisher.td@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/ajfisher/nodebots-hcsr04/issues"
  },
  "dependencies": {},
  "description": "Firmware used to make the HC-SR04 ultrasonic sensor work.",
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-cli": "^0.1.13",
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-copy": "^0.8.1",
    "grunt-contrib-nodeunit": "^0.4.1",
    "grunt-exec": "^0.4.6",
    "nodeunit": "^0.9.1"
  },
  "directories": {
    "test": "test"
  },
  "gitHead": "357492677f4563a512436685199cfa661f4cf859",
  "homepage": "https://github.com/ajfisher/nodebots-hcsr04#readme",
  "keywords": [
    "johnny-five",
    "ping",
    "sensor",
    "nodebots",
    "arduino",
    "hc-sr04",
    "i2c",
    "i2c",
    "backpack"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "nodebots-hcsr04",
  "optionalDependencies": {},
  "readme": "# HC-SR04 Ultrasonic Sensor package for Johnny Five\n\n![](https://img.shields.io/badge/version-0.4.1-blue.svg)\n![](https://img.shields.io/badge/status-Ready-green.svg)\n![](https://img.shields.io/github/issues/ajfisher/nodebots-hcsr04.svg)\n![](https://img.shields.io/npm/v/nodebots-hcsr04.svg)\n\nBy default HCSR04 ultrasonic sensors don't work with johnny-five. This is because\nthey use a custom protocol that requires pulseIn which is not part of the core\nfirmata.\n\nTo overcome this for arduinos you can use a custom firmata (installable from this\npackage) however for devices like Raspberry Pis, you can't directly connect these\ndevices.\n\nAs such a \"BackPack\" provides the ability to use devices such as this using\nI2C which is supported by all Johnny-Five boards. More info on this can be\nfound at [NodeBots Interchange](http://github.com/ajfisher/nodebots-interchange).\n\n## Installation and getting started\n\nInstallation can be done manually using:\n\n```sh\nnpm install nodebots-hcsr04\n```\n\nHowever if you are using johnny five then you can use\n[Interchange](http://github.com/ajfisher/nodebots-interchange) instead\n\n## Firmware installation using Interchange\n\nInterchange is the preferred method of installation with the following instructions\nbeing the way to do it.\n\nA \"supported board\" means that precompiled binaries are shipped in the repo. This\nmeans you don't need to install arduino to be able to install this on your board\n(this is especially useful if you're on a chromebook).\n\nTo get started with interchange:\n\n```\nnpm install nodebots-interchange\n```\n\nThis will place the `interchange` application in your `node_modules/.bin` folder\nand you can either run this directly or add `./node_modules/.bin` to your path\nin order to run it. The sections below explain how to use it and see the\n[Interchange documentation](http://github.com/ajfisher/nodebots-interchange/)\nfor more details and examples.\n\n### I2C Backpack.\n\nThe I2C backpack is the preferred method of use as it's a separate module, and\nwon't impact the performance of your main Arduino running firmata. In addition\nyou can use this on any nodebots device that supports an I2C connection through\nit's IO Plugin (eg RPI, BeagleBone, Tessel etc).\n\nCurrently supported devices (and their board names):\n\n* Arduino Nano (preferred) (nano)\n* Arduino ProMini (pro-mini)\n* Arduino Uno (uno)\n\nTo install, you need to put your backpack into \"configuration mode\". After flashing,\nthis will configure the board with firmware IDs and default I2C address. Simply\njump pin D2 HIGH (connect D2 to 5V). Once complete, remove this jumper to use\nnormally (see wiring diagram below).\n\n![Configuration mode for Interchange Backpack](docs/img/backpack_program_bb.png)\n\nThen use interchange to flash and configure the board.\n\n```sh\ninterchange install hc-sr04 -p <port> -a <board=[nano|uno|pro-mini]>\n```\n\nWhere `<board>` is the type of board using the names given above and `<port>`\nis the name or address of the serial port (eg: /dev/tty.usbserial1450).\n\nTo use the ping sensor, wire it up as the diagram below shows and then you can\nuse it with the Johnny Five controller. Note that the trigger and echo are\nwired to the same pin which is D8 on the backpack.\n\n![Circuit for I2C backpack](docs/img/backpack_ping_bb.png)\n\n### Custom firmata\n\nIf you have an arduino and want to use a custom firmata you can simply install\nthe firmware directly.\n\n```\ninterchange install hc-sr04 --firmata -a <board> -p <port>\n```\n\nCurrently supported devices are (and their name for use above):\n\n* Arduino Uno (uno)\n* Arduino Nano (nano)\n* Arduino ProMini (pro-mini).\n\nIf you want to use a different board then open the `firmware/build/hcsr04_firmata`\ndirectory and compile the files using Arduino or GCC. Upload using your normal\nprocess from there.\n\n## Developing\n\nGenerally speaking it's a case of simply cloning the repo, doing an npm install\nand doing development as normal.\n\nOne thing to note is that all pull requests require rebuilding the application\nin order to generate a new set of builds. For this it's handy to make sure you\nhave the `ARDUINO_PATH` environment variable set and then a `grunt compile` is\nall you need.\n\n`ARDUINO_PATH` is simply a full path to the arduino run time, noting that you also\nmust have a version more recent than 1.6.2 in order to get command line benefits.\n\nTo make a build, simply `grunt compile` and it should do everything needed.\n\n### Arduino Version\n\nCurrently this repo uses the Arduino 1.6.6 build in order to maintain consistency\nof build process with regards to where compiled Hexes end up.\n\n## Tests\n\nBefore issuing a pull request, please deliver appropriate tests and also make\nsure the test suite has been run completely - this will ensure build and\nhex files are in the right location.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ajfisher/nodebots-hcsr04.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "0.5.0"
}
